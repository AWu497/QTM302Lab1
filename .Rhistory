install.packages("tidyverse")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(nycflights13)
install.packages("nycflights13")
library(dplyr)
library(nycflights13)
# 1-1: Find flights with arrival delay of two or more hours and compare with flights delayed 1-2 hours
flights_two_plus <- flights %>% filter(arr_delay >= 120)
prop_two_plus <- nrow(flights_two_plus) / nrow(flights)
flights_one_two <- flights %>% filter(arr_delay >= 60 & arr_delay < 120)
prop_one_two <- nrow(flights_one_two) / nrow(flights)
cat("Proportion of flights with 2+ hours delay:", prop_two_plus, "\n")
cat("Proportion of flights with 1-2 hours delay:", prop_one_two, "\n")
# 1-2: Find flights to Houston (IAH or HOU) and compare with flights to Atlanta (ATL)
flights_houston <- flights %>% filter(dest %in% c("IAH", "HOU"))
flights_atlanta <- flights %>% filter(dest == "ATL")
cat("Number of flights to Houston:", nrow(flights_houston), "\n")
cat("Number of flights to Atlanta:", nrow(flights_atlanta), "\n")
cat("Proportion of flights to Houston:", nrow(flights_houston) / nrow(flights), "\n")
cat("Proportion of flights to Atlanta:", nrow(flights_atlanta) / nrow(flights), "\n")
# 1-3: Proportion of flights to Atlanta operated by Delta Airlines
delta_atlanta <- flights_atlanta %>% filter(carrier == "DL")
prop_delta_atlanta <- nrow(delta_atlanta) / nrow(flights_atlanta)
united_chicago <- flights %>% filter(dest == "ORD" & carrier == "UA")
prop_united_chicago <- nrow(united_chicago) / nrow(flights %>% filter(dest == "ORD"))
cat("Proportion of flights to Atlanta by Delta:", prop_delta_atlanta, "\n")
cat("Proportion of flights to Chicago O'Hare by United:", prop_united_chicago, "\n")
# 1-7: Find flights that departed between midnight and 6am, and compare with noon to 6 pm
flights_midnight_6am <- flights %>% filter(dep_time >= 0 & dep_time <= 600)
flights_noon_6pm <- flights %>% filter(dep_time >= 1200 & dep_time <= 1800)
cat("Flights departing between midnight and 6am:", nrow(flights_midnight_6am), "\n")
cat("Flights departing between noon and 6 pm:", nrow(flights_noon_6pm), "\n")
# 2: Find most delayed flights and flights that left earliest
most_delayed <- flights %>% arrange(desc(arr_delay)) %>% slice(1)
earliest_departure <- flights %>% arrange(dep_delay) %>% slice(1)
cat("Most delayed flight details:\n")
print(most_delayed)
cat("\nFlight that left most ahead of schedule:\n")
print(earliest_departure)
# 5.4.1 - Select variable multiple times in select() call
example_select <- flights %>% select(year, year, month, day)
print(example_select)
# Explanation: Including a variable multiple times in select() has no additional effect; it will only select the column once.
# one_of() function use example
vars <- c("year", "month", "day", "dep_delay", "arr_delay")
flights_subset <- flights %>% select(one_of(vars))
print(head(flights_subset))
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE)
library(dplyr)
library(nycflights13)
rm(list=ls())
options(scipen = 999)_
library(dplyr)
library(nycflights13)
rm(list=ls())
options(scipen = 999)
names <- c("ID", "DBAName", "AKAName", "License", "FacilityType", "Risk", "Address",
"City", "State", "ZIP", "InspectionDate", "InspectionType", "Results",
"Violations", "Latitude", "Longitude", "Location")
inspections <- read_csv('http://594442.youcanlearnit.net/inspections.csv',
col_names=names, skip=1)
library(dplyr)
library(nycflights13)
library(readr)
rm(list=ls())
options(scipen = 999)
names <- c("ID", "DBAName", "AKAName", "License", "FacilityType", "Risk", "Address",
"City", "State", "ZIP", "InspectionDate", "InspectionType", "Results",
"Violations", "Latitude", "Longitude", "Location")
inspections <- read_csv('http://594442.youcanlearnit.net/inspections.csv',
col_names=names, skip=1)
regional_inspections <- unite(inspections, Region, City, State, sep=", ", remove=FALSE)
library(dplyr)
library(nycflights13)
library(readr)
library(tidyr)
rm(list=ls())
options(scipen = 999)
names <- c("ID", "DBAName", "AKAName", "License", "FacilityType", "Risk", "Address",
"City", "State", "ZIP", "InspectionDate", "InspectionType", "Results",
"Violations", "Latitude", "Longitude", "Location")
inspections <- read_csv('http://594442.youcanlearnit.net/inspections.csv',
col_names=names, skip=1)
regional_inspections <- unite(inspections, Region, City, State, sep=", ", remove=FALSE)
unique(regional_inspections$Region)
regional_inspections <- regional_inspections %>%
mutate(Region = str_to_upper(Region))
install.packages("stringr")
library(dplyr)
library(nycflights13)
library(readr)
library(tidyr)
library(stringr)
rm(list=ls())
options(scipen = 999)
names <- c("ID", "DBAName", "AKAName", "License", "FacilityType", "Risk", "Address",
"City", "State", "ZIP", "InspectionDate", "InspectionType", "Results",
"Violations", "Latitude", "Longitude", "Location")
inspections <- read_csv('http://594442.youcanlearnit.net/inspections.csv',
col_names=names, skip=1)
regional_inspections <- unite(inspections, Region, City, State, sep=", ", remove=FALSE)
unique(regional_inspections$Region)
regional_inspections <- regional_inspections %>%
mutate(Region = str_to_upper(Region))
names <- c("ID", "DBAName", "AKAName", "License", "FacilityType", "Risk", "Address",
"City", "State", "ZIP", "InspectionDate", "InspectionType", "Results",
"Violations", "Latitude", "Longitude", "Location")
inspections <- read_csv('http://594442.youcanlearnit.net/inspections.csv',
col_names=names, skip=1)
regional_inspections <- unite(inspections, Region, City, State, sep=", ", remove=FALSE)
unique(regional_inspections$Region)
regional_inspections <- regional_inspections %>%
mutate(Region = str_to_upper(Region))
na_count_region <- sum(is.na(regional_inspections$Region))
# Display the count of NA values
print(paste("The number of NA values in the 'Region' variable is:", na_count_region))
flights_two_plus <- flights %>%
filter(arr_delay >= 120)
prop_two_plus <- nrow(flights_two_plus) / nrow(flights)
flights_one_two <- flights %>% filter(arr_delay >= 60 & arr_delay < 120)
prop_one_two <- nrow(flights_one_two) / nrow(flights)
cat("Proportion of flights with 2+ hours delay:", prop_two_plus, "\n")
cat("Proportion of flights with 1-2 hours delay:", prop_one_two, "\n")
# 1-2: Find flights to Houston (IAH or HOU) and compare with flights to Atlanta (ATL)
flights_houston <- flights %>% filter(dest %in% c("IAH", "HOU"))
flights_atlanta <- flights %>% filter(dest == "ATL")
cat("Number of flights to Houston:", nrow(flights_houston), "\n")
cat("Number of flights to Atlanta:", nrow(flights_atlanta), "\n")
cat("Proportion of flights to Houston:", nrow(flights_houston) / nrow(flights), "\n")
cat("Proportion of flights to Atlanta:", nrow(flights_atlanta) / nrow(flights), "\n")
# 1-3: Proportion of flights to Atlanta operated by Delta Airlines
delta_atlanta <- flights_atlanta %>% filter(carrier == "DL")
prop_delta_atlanta <- nrow(delta_atlanta) / nrow(flights_atlanta)
united_chicago <- flights %>% filter(dest == "ORD" & carrier == "UA")
prop_united_chicago <- nrow(united_chicago) / nrow(flights %>% filter(dest == "ORD"))
cat("Proportion of flights to Atlanta by Delta:", prop_delta_atlanta, "\n")
cat("Proportion of flights to Chicago O'Hare by United:", prop_united_chicago, "\n")
# 1-7: Find flights that departed between midnight and 6am, and compare with noon to 6 pm
flights_midnight_6am <- flights %>% filter(dep_time >= 0 & dep_time <= 600)
flights_noon_6pm <- flights %>% filter(dep_time >= 1200 & dep_time <= 1800)
cat("Flights departing between midnight and 6am:", nrow(flights_midnight_6am), "\n")
cat("Flights departing between noon and 6 pm:", nrow(flights_noon_6pm), "\n")
# 2: Find most delayed flights and flights that left earliest
most_delayed <- flights %>% arrange(desc(arr_delay)) %>% slice(1)
earliest_departure <- flights %>% arrange(dep_delay) %>% slice(1)
cat("Most delayed flight details:\n")
print(most_delayed)
cat("\nFlight that left most ahead of schedule:\n")
print(earliest_departure)
# 5.4.1 - Select variable multiple times in select() call
example_select <- flights %>% select(year, year, month, day)
print(example_select)
# Explanation: Including a variable multiple times in select() has no additional effect; it will only select the column once.
# one_of() function use example
vars <- c("year", "month", "day", "dep_delay", "arr_delay")
flights_subset <- flights %>% select(one_of(vars))
print(head(flights_subset))
# 1-1
flights_two_plus <- flights %>%
filter(arr_delay >= 120)
prop_two_plus <- nrow(flights_two_plus) / nrow(flights)
flights_one_two <- flights %>% filter(arr_delay >= 60 & arr_delay < 120)
prop_one_two <- nrow(flights_one_two) / nrow(flights)
cat("Proportion of flights with 2+ hours delay:", prop_two_plus, "\n")
cat("Proportion of flights with 1-2 hours delay:", prop_one_two, "\n")
# 1-2
flights_houston <- flights %>% filter(dest %in% c("IAH", "HOU"))
flights_atlanta <- flights %>% filter(dest == "ATL")
cat("Number of flights to Houston:", nrow(flights_houston), "\n")
cat("Number of flights to Atlanta:", nrow(flights_atlanta), "\n")
cat("Proportion of flights to Houston:", nrow(flights_houston) / nrow(flights), "\n")
cat("Proportion of flights to Atlanta:", nrow(flights_atlanta) / nrow(flights), "\n")
# 1-3
delta_atlanta <- flights_atlanta %>% filter(carrier == "DL")
prop_delta_atlanta <- nrow(delta_atlanta) / nrow(flights_atlanta)
united_chicago <- flights %>% filter(dest == "ORD" & carrier == "UA")
prop_united_chicago <- nrow(united_chicago) / nrow(flights %>% filter(dest == "ORD"))
cat("Proportion of flights to Atlanta by Delta:", prop_delta_atlanta, "\n")
cat("Proportion of flights to Chicago O'Hare by United:", prop_united_chicago, "\n")
# 1-7
flights_midnight_6am <- flights %>% filter(dep_time >= 0 & dep_time <= 600)
flights_noon_6pm <- flights %>% filter(dep_time >= 1200 & dep_time <= 1800)
cat("Flights departing between midnight and 6am:", nrow(flights_midnight_6am), "\n")
cat("Flights departing between noon and 6 pm:", nrow(flights_noon_6pm), "\n")
# 2: Find most delayed flights and flights that left earliest
most_delayed <- flights %>% arrange(desc(arr_delay)) %>% slice(1)
earliest_departure <- flights %>% arrange(dep_delay) %>% slice(1)
cat("Most delayed flight details:\n")
print(most_delayed)
cat("\nFlight that left most ahead of schedule:\n")
print(earliest_departure)
# 1-1
num2more <- flights %>%
filter(arr_delay >= 120)
prop2more <- nrow(num2more) / nrow(flights)
num12 <- flights %>% filter(arr_delay >= 60 & arr_delay < 120)
prop12 <- nrow(num12) / nrow(flights)
cat("Proportion of flights with 2+ hours delay:", prop2more, "\n")
cat("Proportion of flights with 1-2 hours delay:", prop12, "\n")
# 1-2
HOUS <- flights %>% filter(dest %in% c("IAH", "HOU"))
ATLA <- flights %>% filter(dest == "ATL")
cat("Number of flights to Houston:", nrow(HOUS), "\n")
cat("Number of flights to Atlanta:", nrow(ATLA), "\n")
cat("Proportion of flights to Houston:", nrow(HOUS) / nrow(flights))
cat("Proportion of flights to Atlanta:", nrow(ATLA) / nrow(flights))
# 1-3
delta_atlanta <- flights_atlanta %>% filter(carrier == "DL")
prop_delta_atlanta <- nrow(delta_atlanta) / nrow(flights_atlanta)
united_chicago <- flights %>% filter(dest == "ORD" & carrier == "UA")
prop_united_chicago <- nrow(united_chicago) / nrow(flights %>% filter(dest == "ORD"))
cat("Proportion of flights to Atlanta by Delta:", prop_delta_atlanta, "\n")
cat("Proportion of flights to Chicago O'Hare by United:", prop_united_chicago, "\n")
# 1-7
flights_midnight_6am <- flights %>% filter(dep_time >= 0 & dep_time <= 600)
flights_noon_6pm <- flights %>% filter(dep_time >= 1200 & dep_time <= 1800)
cat("Flights departing between midnight and 6am:", nrow(flights_midnight_6am))
cat("Flights departing between noon and 6 pm:", nrow(flights_noon_6pm))
# 1-1
num2more <- flights %>%
filter(arr_delay >= 120)
prop2more <- nrow(num2more) / nrow(flights)
num12 <- flights %>% filter(arr_delay >= 60 & arr_delay < 120)
prop12 <- nrow(num12) / nrow(flights)
print("Proportion of flights with 2+ hours delay:", prop2more, "\n")
# 1-1
num2more <- flights %>%
filter(arr_delay >= 120)
prop2more <- nrow(num2more) / nrow(flights)
num12 <- flights %>% filter(arr_delay >= 60 & arr_delay < 120)
prop12 <- nrow(num12) / nrow(flights)
cat("Proportion of flights with 2+ hours delay:", prop2more, "\n")
cat("Proportion of flights with 1-2 hours delay:", prop12, "\n")
# 1-2
HOUS <- flights %>% filter(dest %in% c("IAH", "HOU"))
ATLA <- flights %>% filter(dest == "ATL")
cat("Number of flights to Houston:", nrow(HOUS), "\n")
cat("Number of flights to Atlanta:", nrow(ATLA), "\n")
cat("Proportion of flights to Houston:", nrow(HOUS) / nrow(flights))
cat("Proportion of flights to Atlanta:", nrow(ATLA) / nrow(flights))
# 1-3
delta_atlanta <- flights_atlanta %>% filter(carrier == "DL")
prop_delta_atlanta <- nrow(delta_atlanta) / nrow(flights_atlanta)
united_chicago <- flights %>% filter(dest == "ORD" & carrier == "UA")
prop_united_chicago <- nrow(united_chicago) / nrow(flights %>% filter(dest == "ORD"))
cat("Proportion of flights to Atlanta by Delta:", prop_delta_atlanta, "\n")
cat("Proportion of flights to Chicago O'Hare by United:", prop_united_chicago, "\n")
# 1-7
flights_midnight_6am <- flights %>% filter(dep_time >= 0 & dep_time <= 600)
flights_noon_6pm <- flights %>% filter(dep_time >= 1200 & dep_time <= 1800)
cat("Flights departing between midnight and 6am:", nrow(flights_midnight_6am))
cat("Flights departing between noon and 6 pm:", nrow(flights_noon_6pm))
# 2
most_delayed <- flights %>% arrange(desc(arr_delay)) %>% slice(1)
earliest_departure <- flights %>% arrange(dep_delay) %>% slice(1)
cat("Most delayed flight details:", most_delayed)
# 2
most_delayed <- flights %>% arrange(desc(arr_delay)) %>% slice(1)
earliest_departure <- flights %>% arrange(dep_delay) %>% slice(1)
cat("Most delayed flight details:")
print(most_delayed)
cat("\nFlight that left most ahead of schedule:\n")
print(earliest_departure)
